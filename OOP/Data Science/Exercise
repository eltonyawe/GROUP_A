import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, confusion_matrix, accuracy_score

# Load your dataset
df = pd. read_csv('loan_data.csv')

# Preview the data
print(data.head())


# Preprocess the data
# Fill missing values
data.fillna(data.mean(), inplace=True)


# Convert categorical variables to dummy variables
data = pd.get_dummies(data)


# Define features and target
X = data.drop('Loan_Status', axis=1)
y = data['Loan_Status']


# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)


# Standardize the features
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)


# Initialize the model
model = RandomForestClassifier(n_estimators=100, random_state=42)


# Train the model
model.fit(X_train, y_train)


# Make predictions
y_pred = model.predict(X_test)


# Evaluate the model
print('Confusion Matrix:')
print(confusion_matrix(y_test, y_pred))


print('\nClassification Report:')
print(classification_report(y_test, y_pred))


print('\nAccuracy Score:')
print(accuracy_score(y_test, y_pred))